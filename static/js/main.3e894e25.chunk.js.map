{"version":3,"sources":["components/Header.jsx","firebase/config.js","custom-hooks/useStorage.js","components/ProgressBar.jsx","components/UploadForm.jsx","custom-hooks/useFireStore.js","contexts/SelectedImage.js","components/Image.jsx","components/ImagesList.jsx","components/Modal.jsx","App.js","index.js"],"names":["Header","className","role","aria-label","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFireStore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snapshot","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","imgUrl","add","createdAt","ProgressBar","setFile","div","initial","width","animate","toFixed","types","UploadForm","type","onChange","e","uploadedFile","target","files","match","accept","useFireStore","collectionName","images","setImages","unsub","orderBy","onSnapshot","docImages","forEach","doc","push","data","id","SelectedImageContext","createContext","require","selectedImage","selectImage","React","memo","image","useContext","onClick","whileHover","opacity","layout","img","src","alt","transition","delay","ImagesList","map","key","Modal","handleClick","classList","contains","y","duration","App","setSelectedImage","SelectedImage","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e894e25.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n\t\t<div className='header'>\n\t\t\t<h1>FireGall</h1>\n\t\t\t<h2>Your Pictures</h2>\n\t\t\t<p>The world is your canvas..Paint it in your own way <span role=\"img\" aria-label=\"wise\">ðŸ˜„</span></p>\n\t\t</div>\n\t);\n};\n\nexport default Header;","import * as firebase from 'firebase/app';\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n\tapiKey: process.env.REACT_APP_FIREBASE_KEY,\n\tauthDomain: \"image-gallery-fbcc3.firebaseapp.com\",\n\tdatabaseURL: \"https://image-gallery-fbcc3.firebaseio.com\",\n\tprojectId: \"image-gallery-fbcc3\",\n\tstorageBucket: \"image-gallery-fbcc3.appspot.com\",\n\tmessagingSenderId: \"560360239069\",\n\tappId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage= firebase.storage();\nconst projectFireStore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport {projectFireStore,projectStorage,timestamp};\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFireStore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n\tconst [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n    \n    useEffect(()=>{\n        const storageRef=projectStorage.ref(file.name); //basically defines a reference for file n firebase storage\n        const collectionRef = projectFireStore.collection('images');\n\n        /*  This 'on' runs every time file upload(as it is concat to put fn for file) state changes (progress) or error or completion of upload\n            It has 4 params, 1---> type/name of event , 2---> snapshot of file being uploaded\n                             3---> error fn, 4---> completion fn\n        */\n        storageRef.put(file).on('state_changed',(snapshot)=>{ // adds file to this storageRef\n            const percentage = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\n            setProgress(percentage);\n        },(err)=>{\n            setError(err);\n        },async ()=>{\n            const imgUrl = await storageRef.getDownloadURL();\n            await collectionRef.add({imgUrl,createdAt: timestamp()})\n            setUrl(imgUrl);\n        });   \n    },[file]);\n    return { progress, url, error };\n};\n\nexport default useStorage;","import React, { useEffect } from \"react\";\nimport useStorage from \"../custom-hooks/useStorage\";\nimport { motion } from \"framer-motion\";\n\nconst ProgressBar = ({ file, setFile }) => {\n\tconst { progress, url } = useStorage(file);\n\tuseEffect(() => {\n\t\tif (url) {\n\t\t\tsetFile(null);\n\t\t}\n\t}, [url, setFile]);\n\n\treturn (\n\t\t<motion.div className='progress-bar'\n\t\t\tinitial={{width:0}}\n\t\t\tanimate={{width: `${progress}%`}}\n\t\t>{progress.toFixed(0)}%</motion.div>\n\t);\n};\n\nexport default ProgressBar;\n","import React, { useState, Fragment } from \"react\";\nimport ProgressBar from \"./ProgressBar\";\n\nconst types = /image\\/\\w+/;\n\nconst UploadForm = () => {\n\tconst [file, setFile] = useState(null);\n\tconst [error, setError] = useState(null);\n\n\tconst handleChange = (e) => {\n\t\tconst uploadedFile = e.target.files[0];\n\t\tif (uploadedFile && uploadedFile.type.match(types)) {\n\t\t\tsetFile(uploadedFile);\n\t\t\tsetError(null);\n\t\t}else{\n\t\t\tsetFile(null);\n\t\t\tsetError(\"Please select an image file (png or jpg or other image types)\");\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<label>\n\t\t\t\t<input type='file' onChange={handleChange} accept=\"image/*\" />\n\t\t\t\t<span><strong>+</strong> Upload Image</span>\n\t\t\t</label>\n\t\t\t<div className='output'>\n\t\t\t\t{error && <div className='error'>{error}</div>}\n\t\t\t\t{file && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div>{file.name}</div>\n\t\t\t\t\t\t<ProgressBar file={file} setFile={setFile} />\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UploadForm;\n","import { useState, useEffect } from \"react\";\nimport { projectFireStore } from \"../firebase/config\";\n\n\nconst useFireStore = (collectionName) => {\n    const [images,setImages] = useState([]);\n    useEffect(()=>{\n\n        const unsub = projectFireStore.collection(collectionName).orderBy('createdAt','desc')\n            .onSnapshot(snapshot=>{\n                let docImages = [];\n                snapshot.forEach(doc=> docImages.push({...doc.data(),id: doc.id}));\n                setImages(docImages);\n            });\n        \n        return ()=> unsub();\n        \n    },[collectionName]);\n\n    return {images};\n};\n\nexport default useFireStore;","const { createContext } = require(\"react\");\n\nconst SelectedImageContext = createContext({\n    selectedImage: null,\n    selectImage:()=>{}   \n});\n\nexport default SelectedImageContext;","import React, { useContext } from 'react';\nimport SelectedImageContext from '../contexts/SelectedImage';\nimport {motion} from \"framer-motion\";\n\nconst Image = ({image:{imgUrl}}) => {\n    const {selectImage} = useContext(SelectedImageContext);\n    return (\n        <motion.div className=\"img-wrap\" onClick={()=>selectImage(imgUrl)}\n            whileHover={{opacity: 1}}\n            layout\n        >\n           <motion.img src={imgUrl} alt=\"uploaded-pic\"\n                initial={{opacity: 0}}\n                animate={{opacity: 1}}\n                transition={{delay: 1}}\n           /> \n        </motion.div>\n    );\n};\n\nexport default React.memo(Image);","import React from 'react';\nimport useFireStore from '../custom-hooks/useFireStore';\nimport Image from './Image';\n\nconst ImagesList = () => {\n    const {images} = useFireStore('images');\n     return (\n        <div className=\"img-grid\">\n            {images.map(image=>(\n                <Image key={image.id} image={image} />\n            ))}\n        </div>\n    );\n};\n\nexport default ImagesList;","import React, { useContext } from 'react';\nimport SelectedImageContext from '../contexts/SelectedImage';\nimport { motion } from \"framer-motion\";\n\nconst Modal = () => {\n    const {selectedImage,selectImage} = useContext(SelectedImageContext);\n    const handleClick = (e) => {\n        if(e.target.classList.contains('backdrop') || e.target.classList.contains('close-btn'))\n            selectImage(null);\n    }\n    return (\n        <motion.div className=\"backdrop\" onClick={handleClick}\n            initial={{opacity: 0}}\n            animate={{opacity: 1}}\n        >\n            <div className=\"close-btn\" onClick={handleClick}>&#9747;</div>\n            <motion.img src={selectedImage} alt=\"enlarged-pic\" \n                initial={{y: \"-100vh\"}}\n                animate={{y: 0}}\n                transition={{ duration: 0.5 }}\n            />\n        </motion.div>\n    );\n};\n\nexport default Modal;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport UploadForm from './components/UploadForm';\nimport ImagesList from './components/ImagesList';\nimport Modal from './components/Modal';\nimport SelectedImageContext from './contexts/SelectedImage';\n\nconst App = () => {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const selectImage = (imgUrl)=> setSelectedImage(imgUrl);\n  return (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<UploadForm />\n\t\t\t<SelectedImageContext.Provider value={{ selectImage, selectedImage }}>\n\t\t\t\t<ImagesList />\n\t\t\t\t{selectedImage && <Modal />}\n\t\t\t</SelectedImageContext.Provider>\n\t\t</div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}